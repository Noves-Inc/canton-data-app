services:
  canton-data-app-frontend:
    image: ghcr.io/noves-inc/canton-translate-ui:dist
    container_name: canton-data-app-frontend
    ports:
      - "8091:8091"
    environment:
      PORT: "8091"
      # Backend endpoint (internal Docker DNS)
      CANTON_TRANSLATE_BASE_URL: "http://canton-data-app-backend:8090"
      CANTON_INDEXER_PAGE_SIZE: "1000"
      
      # ===== Auth0 Configuration (Option 1) =====
      # Uncomment these to use Auth0 for authentication
      VITE_AUTH0_DOMAIN: "your-tenant.us.auth0.com"
      VITE_AUTH0_CLIENT_ID: "<SPA_CLIENT_ID>" # From Auth0 SPA app
      VITE_AUTH0_AUDIENCE: "https://canton.network.global" # Custom API identifier - REQUIRED for JWT tokens
      VITE_AUTH0_REDIRECT_URI: "https://canton-data-ui.yourdomain.com/callback"
      VITE_AUTH0_LOGOUT_URL: "https://canton-data-ui.yourdomain.com"
      
      # ===== Keycloak Configuration (Option 2) =====
      # Uncomment these to use Keycloak for authentication (alternative to Auth0)
      # NOTE: Presence of VITE_KEYCLOAK_URL triggers Keycloak authentication
      # VITE_KEYCLOAK_URL: "https://keycloak.yourdomain.com"  # Base URL of Keycloak server
      # VITE_KEYCLOAK_REALM: "your-realm-name"  # Keycloak realm name
      # VITE_KEYCLOAK_CLIENT_ID: "data-app-ui"  # From Keycloak Public Client
      # VITE_KEYCLOAK_REDIRECT_URI: "https://canton-data-ui.yourdomain.com/callback"
      # VITE_KEYCLOAK_LOGOUT_URL: "https://canton-data-ui.yourdomain.com"
      # IMPORTANT: Keycloak client must have 'daml_ledger_api' as a default scope
    volumes:
      - frontend-data:/app/data
      - frontend-exports:/app/exports
    networks:
      - splice-validator_splice_validator
    depends_on:
      - canton-data-app-backend
    restart: unless-stopped

  canton-data-app-backend:
    image: ghcr.io/noves-inc/canton-translate:dist
    container_name: canton-data-app-backend
    ports:
      - "8090:8090"
    environment:
      # Local database path
      INDEX_DB_PATH: "./index.db"

      # Canton Ledger API connection
      # OR if using external participant:
      # CANTON_NODE_ADDR: "canton-validator.yourdomain.com:8443"
      CANTON_NODE_ADDR: "participant:5001" # Internal Docker DNS

      # CANTON_NODE_CERT_FILE_PATH: "/code/validator_certificate.crt"
      CANTON_NODE_CERT_FILE_PATH: ""
    volumes:
      - backend-data:/app/data
      # set this if you're using TLS and need to mount the certificate
      # - ./certs/validator_certificate.crt:/code/validator_certificate.crt:ro

    networks:
      - splice-validator_splice_validator
    restart: unless-stopped

networks:
  splice-validator_splice_validator:
    external: true
    # Change to your actual network name

volumes:
  frontend-data: # Persistent storage for frontend data
  frontend-exports: # Persistent storage for CSV exports
  backend-data: # Persistent storage for backend database
