apiVersion: v1
kind: ConfigMap
metadata:
  name: data-app-backend-config
  namespace: validator  # UPDATE with your namespace
data:
  # Local database path
  INDEX_DB_PATH: "./index.db"
  
  # Canton Ledger API connection
  # OR if using external participant:
  # CANTON_NODE_ADDR: "canton-validator.yourdomain.com:8443"
  CANTON_NODE_ADDR: "participant.validator.svc.cluster.local:5001"  # UPDATE namespace if different
  
  # CANTON_NODE_CERT_FILE_PATH: "/code/validator_certificate.crt"
  CANTON_NODE_CERT_FILE_PATH: "" # Leave empty if not expecting TLS from inside the participant (default behavior)

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: data-app-frontend-config
  namespace: validator  # UPDATE with your namespace
data:
  PORT: "8091"
  
  # Backend endpoint (internal Kubernetes DNS)
  CANTON_TRANSLATE_BASE_URL: "http://data-app-backend:8090"
  
  CANTON_INDEXER_PAGE_SIZE: "1000"

  # ===== Auth0 Configuration (Option 1) =====
  # Use these for Auth0 authentication
  VITE_AUTH0_DOMAIN: "your-tenant.us.auth0.com"
  VITE_AUTH0_CLIENT_ID: "<SPA_CLIENT_ID>"  # From Auth0 SPA app
  VITE_AUTH0_AUDIENCE: "https://canton.network.global" # Custom API identifier - REQUIRED for JWT tokens
  VITE_AUTH0_REDIRECT_URI: "https://canton-data-ui.yourdomain.com/callback"
  VITE_AUTH0_LOGOUT_URL: "https://canton-data-ui.yourdomain.com"
  
  # ===== Keycloak Configuration (Option 2) =====
  # Uncomment these to use Keycloak for authentication (alternative to Auth0)
  # NOTE: Presence of VITE_KEYCLOAK_URL triggers Keycloak authentication
  # VITE_KEYCLOAK_URL: "https://keycloak.yourdomain.com"  # Base URL of Keycloak server
  # VITE_KEYCLOAK_REALM: "your-realm-name"  # Keycloak realm name
  # VITE_KEYCLOAK_CLIENT_ID: "data-app-ui"  # From Keycloak Public Client
  # VITE_KEYCLOAK_REDIRECT_URI: "https://canton-data-ui.yourdomain.com/callback"
  # VITE_KEYCLOAK_LOGOUT_URL: "https://canton-data-ui.yourdomain.com"
  # IMPORTANT: Keycloak client must have 'daml_ledger_api' as a default scope
